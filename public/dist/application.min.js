"use strict";var dash=angular.module("dash",["ngRoute","ngAnimate","ui.bootstrap","toaster","routeStyles"]),front=angular.module("front",["ngRoute","routeStyles"]);front.controller("ForgotCtrl",["$window","$scope","$http",function($window,$scope,$http){$scope.user={email:""},$scope.submit=function(){$scope.user.email=$scope.email,$http.post("/api/auth/forgot",$scope.user).then(function(res){$scope.message=res.data.message},function(err){$scope.message=err.data.message,console.log(err)})}}]),dash.controller("historyCtrl",["$scope","$location","$http","UserService","toaster","$window",function($scope,$location,$http,UserService,toaster,$window){$scope.postedRequest=[],$scope.appliedRequest=[],$scope.postedRides=[],$scope.appliedRides=[],$scope.mergedList=[];var driverList=["postedRides","appliedRequest"];$scope.viewAsDriver="passenger",$scope.showElement=function(type){return"driver"===$scope.viewAsDriver?driverList.indexOf(type)>-1:driverList.indexOf(type)<=-1},$scope.GenerateNote=function(type){return"postedRequest"===type?"you posted this request":"appliedRequest"===type?"you responsed to this request":"postedRides"===type?"you posted this ride":"appliedRides"===type?"you applied to this ride":void 0},$scope.defineMainClass=function(type){return"appliedRequest"===type||"appliedRides"===type?"alt":""},$scope.defineIconClass=function(type){return"postedRides"===type?"fa fa-car":"appliedRides"===type?"fa fa-user":"postedRequest"===type?"fa fa-map-signs":"appliedRequest"===type?"fa fa-comment":void 0},$scope.defineIconColorClass=function(type){return"postedRides"===type?"btn-info":"appliedRides"===type?"btn-dark":"postedRequest"===type?"btn-danger":"appliedRequest"===type?"btn-warning":void 0};var compare=function(a,b){return new Date(b.endTime)-new Date(a.endTime)},importData=function(data){$scope.postedRequest=data.postedRequest,$scope.appliedRequest=data.appliedRequest,$scope.postedRides=data.postedRides,$scope.appliedRides=data.appliedRides;for(var i=0;i<data.postedRequest.length;i++)data.postedRequest[i].source="postedRequest",$scope.mergedList.push(data.postedRequest[i]);for(var j=0;j<data.appliedRequest.length;j++)data.appliedRequest[j].source="appliedRequest",$scope.mergedList.push(data.appliedRequest[j]);for(var m=0;m<data.postedRides.length;m++)data.postedRides[m].source="postedRides",$scope.mergedList.push(data.postedRides[m]);for(var n=0;n<data.appliedRides.length;n++)data.appliedRides[n].source="appliedRides",$scope.mergedList.push(data.appliedRides[n]);$scope.mergedList=$scope.mergedList.sort(compare),console.log($scope.mergedList)};(function(){UserService.userInfo==={}?UserService.getRideHistory().then(function(res){importData(res.data)}):UserService.saveUserInfo().then(function(firstRes){UserService.getRideHistory().then(function(res){importData(res.data)})})})()}]),dash.controller("postRideCtrl",["$http","$scope","toaster","CityList","UserService",function($http,$scope,toaster,CityList,UserService){function validation(){if($scope.form.price<0)return $scope.errorMsg="Please enter a valid price.",$scope.noError=!1,!1;if("Select a city"===$scope.form.departure)return $scope.errorMsg="Please select a departure location.",$scope.noError=!1,!1;if("Select a city"===$scope.form.destination)return $scope.errorMsg="Please select a destination.",$scope.noError=!1,!1;if(!$scope.form.date)return $scope.errorMsg="Please select a date.",$scope.noError=!1,!1;var yesterday=new Date((new Date).getTime()-864e5);return $scope.form.date<yesterday?($scope.errorMsg="Please select a valid date.",$scope.noError=!1,!1):$scope.form.startTime&&$scope.form.endTime?$scope.form.endTime<$scope.form.startTime?($scope.errorMsg="Time period is invalid.",$scope.noError=!1,!1):($scope.noError=!0,!0):($scope.errorMsg="Please select a valid time.",$scope.noError=!1,!1)}$scope.roundTime=function(time){var mins=time.getMinutes(),quarterHours=Math.round(mins/15);4===quarterHours&&time.setHours(time.getHours()+1);var rounded=15*quarterHours%60;return time.setMinutes(rounded),time},$scope.cities=CityList.commonCities,$scope.passengers=[1,2,3,4],$scope.errorMsg="",$scope.noError=!0,$scope.form={startTime:$scope.roundTime(new Date),endTime:$scope.roundTime(new Date),price:0},console.log($scope.form),$scope.popup={opened:!1},$scope.dateOptions={formatYear:"yy",minDate:new Date},$scope.form.user_id=UserService.getUserId(),""===$scope.form.user_id&&UserService.getUserInfo().then(function(res){$scope.form.user_id=res.data[0]._id}),$scope.open=function(){$scope.popup.opened=!0},$scope.submit=function(){if(validation()){var year=$scope.form.date.getFullYear(),month=$scope.form.date.getMonth(),day=$scope.form.date.getDate(),user_id=$scope.form.user_id,startingH=$scope.form.startTime.getHours(),startingM=$scope.form.startTime.getMinutes(),endingH=$scope.form.endTime.getHours(),endingM=$scope.form.endTime.getMinutes();$scope.form.startTime=new Date(year,month,day,startingH,startingM),$scope.form.endTime=new Date(year,month,day,endingH,endingM),$http.post("/api/ride",$scope.form).then(function(res){res?(toaster.pop("success","Success","Your ride has been posted!"),$scope.form={user_id:user_id,startTime:$scope.roundTime(new Date),endTime:$scope.roundTime(new Date),departure:"Select a city",destination:"Select a city",passenger:1,price:0}):toaster.pop("error","Failure","Some unexpected error occurs!")},function(err){console.log(err)})}}}]),dash.controller("profileCtrl",["$scope","$location","$http","UserService","toaster","$window",function($scope,$location,$http,UserService,toaster,$window){$scope.editing=!1,$scope.showCar=!($window.innerWidth<990);var backup={};UserService.getUserInfo().then(function(res){return"failure"===res?void($window.location.href="/#/login"):($scope.user=res.data[0],backup.displayName=res.data[0].displayName,backup.email=res.data[0].email,backup.phone=res.data[0].phone,void(backup.wechat=res.data[0].wechat))},function(err){$window.location.href="/#/login"}),angular.element($window).on("resize",function(){$window.innerWidth<990&&($scope.$apply(function(){$scope.disableCar()}),$scope.$digest())}),$scope.disableCar=function(){$scope.showCar=!1},$scope.editInfo=function(){$scope.editing=!0},$scope.saveInfo=function(){$http.post("/api/data/saveProfile",{displayName:$scope.user.displayName,email:$scope.user.email,phone:$scope.user.phone,wechat:$scope.user.wechat,session:UserService.getSession()}).then(function(res){res?toaster.pop("success","Success","Your profile has been updated!"):toaster.pop("error","Failure","Some unexpected error occurs!")}),$scope.editing=!1},$scope.cancelEdit=function(){$scope.user.displayName=backup.displayName,$scope.user.email=backup.email,$scope.user.phone=backup.phone,$scope.user.wechat=backup.wechat,$scope.editing=!1}}]),dash.controller("requestListCtrl",["$scope","$http",function($scope,$http){}]),dash.controller("requestRideCtrl",["$http","$scope","toaster","CityList","UserService",function($http,$scope,toaster,CityList,UserService){function validation(){if("Select a city"===$scope.form.departure)return $scope.errorMsg="Please select a departure location.",$scope.noError=!1,!1;if("Select a city"===$scope.form.destination)return $scope.errorMsg="Please select a destination.",$scope.noError=!1,!1;if(!$scope.form.date)return $scope.errorMsg="Please select a date.",$scope.noError=!1,!1;var yesterday=new Date((new Date).getTime()-864e5);return $scope.form.date<yesterday?($scope.errorMsg="Please select a valid date.",$scope.noError=!1,!1):$scope.form.startTime&&$scope.form.endTime?$scope.form.endTime<$scope.form.startTime?($scope.errorMsg="Time period is invalid.",$scope.noError=!1,!1):($scope.noError=!0,!0):($scope.errorMsg="Please select a valid time.",$scope.noError=!1,!1)}var roundTime=function(time){var mins=time.getMinutes(),quarterHours=Math.round(mins/15);4===quarterHours&&time.setHours(time.getHours()+1);var rounded=15*quarterHours%60;return time.setMinutes(rounded),time};$scope.cities=CityList.commonCities,$scope.passengers=[1,2,3,4],$scope.errorMsg="",$scope.noError=!0,$scope.form={startTime:roundTime(new Date),endTime:roundTime(new Date)},$scope.popup={opened:!1},$scope.dateOptions={formatYear:"yy",minDate:new Date},$scope.form.user_id=UserService.getUserId(),""===$scope.form.user_id&&UserService.getUserInfo().then(function(res){$scope.form.user_id=res.data[0]._id}),$scope.open=function(){$scope.popup.opened=!0},$scope.submit=function(){if(validation()){var user_id=$scope.form.user_id,year=$scope.form.date.getFullYear(),month=$scope.form.date.getMonth(),day=$scope.form.date.getDate(),startingH=$scope.form.startTime.getHours(),startingM=$scope.form.startTime.getMinutes(),endingH=$scope.form.endTime.getHours(),endingM=$scope.form.endTime.getMinutes();$scope.form.startTime=new Date(year,month,day,startingH,startingM),$scope.form.endTime=new Date(year,month,day,endingH,endingM),$http.post("/api/request",$scope.form).then(function(res){res?(toaster.pop("success","Success","Your request has been posted!"),$scope.form={user_id:user_id}):toaster.pop("error","Failure","Some unexpected error occurs!")},function(err){console.log(err)})}}}]),front.controller("ResetCtrl",["$window","$scope","$http","$timeout","$routeParams","$location",function($window,$scope,$http,$timeout,$routeParams,$location){$scope.token=$routeParams.id,$scope.submit=function(){$scope.password!==$scope.passwordRepeat?$scope.message="Passwords don't match":($scope.send={newPassword:$scope.password,verifyPassword:$scope.passwordRepeat},$http.post("/api/auth/reset/"+$scope.token,$scope.send).then(function(res){$scope.message="Your password has been reset, you'll be redirected in 3 seconds...",$timeout(function(){$location.path("/login")},3e3)},function(err){$scope.message=err.data.message}))}}]),dash.controller("rideListCtrl",["$window","$scope","$http","CityList","UserService","$uibModal","toaster",function($window,$scope,$http,CityList,UserService,$uibModal,toaster){$scope.toggleFilter=function(){$scope.showFilter=!$scope.showFilter},$scope.requestRide=function(ride){$uibModal.open({animation:!0,arialLabelledBy:"modal-title",arialDescribedBy:"modal-body",templateUrl:"views/components/requestRideModal.html",controller:["$scope","$uibModalInstance","$timeout",function($scope,$uibModalInstance,$timeout){$scope.selected={email:!1,phone:!1,wechat:!1},$scope.selectAll=function(){$scope.selected.email=!0,$scope.selected.phone=!0,$scope.selected.wechat=!0},$scope.unSelectAll=function(){$scope.selected.email=!1,$scope.selected.phone=!1,$scope.selected.wechat=!1},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.submit=function(){return $scope.validate()?void($scope.showError=!0):($scope.showError=!1,void $uibModalInstance.close($scope.selected))},$scope.validate=function(){return!($scope.selected.email||$scope.selected.phone||$scope.selected.wechat)}}],size:"sm"}).result.then(function(selected){$http.post("/api/requestRide",{selected:selected,ride_id:ride._id,passenger_id:$scope.user._id}).then(function(res){"success"===res.data?toaster.pop("success","Success","Your contact has been sent to the driver!"):toaster.pop("error","Failure","Some unexpected error occurs!"),ride.isApplied=!0})})},$scope.open=function(){document.getElementById("datepicker").focus(),$scope.popup.opened=!0};var addRelations=function(userId){$scope.rides.forEach(function(iterator){iterator.user===userId&&(iterator.isMine=!0),iterator.passengerList.forEach(function(it){if(it.userid===userId)return void(iterator.isApplied=!0)})})},processData=function(){$scope.rides.length;$scope.numberOfPages=function(){return Math.ceil($scope.rides.length/$scope.pageSize)},UserService.getUserInfo().then(function(res){$scope.user=res.data[0],addRelations($scope.user._id)})};$scope.invalidInput=!1,$scope.applyFilter=function(){$scope.form.departure&&$scope.form.destination&&$scope.form.passengers&&$scope.form.date&&$scope.form.departure!==$scope.cities[0]&&$scope.form.destination!==$scope.cities[0]?($scope.invalidInput=!1,$scope.invalidDeparture=!1,$scope.invalidDestination=!1,$scope.invalidPassenger=!1,$scope.invalidDate=!1,$scope.filter.departure=$scope.form.departure.trim(),$scope.filter.destination=$scope.form.destination.trim(),$scope.filter.passengers=$scope.form.passengers,$scope.filter.date=$scope.form.date):($scope.invalidInput=!0,$scope.form.departure&&$scope.form.departure!==$scope.cities[0]||($scope.invalidDeparture=!0),$scope.form.destination&&$scope.form.destination!==$scope.cities[0]||($scope.invalidDestination=!0),$scope.form.passengers||($scope.invalidPassenger=!0),$scope.form.date||($scope.invalidDate=!0))},$http.get("/api/rides").then(function(res){$scope.rides=res.data,processData()},function(res){console.log(res)}),$scope.getDetail=function(ride){};(function(){$scope.form={},$scope.user={},$scope.filter={},$scope.cities=CityList.commonCities,$scope.dateOptions={formatYear:"yy",minDate:new Date},$scope.popup={opened:!1},$scope.showFilter=!1,$scope.isCollapsed=!0,$scope.form.passengers=1,$scope.form.date=new Date,$scope.rides=[],$scope.currentPage=0,$scope.pageSize=10,$scope.options=[10,20,50]})()}]),front.controller("SigninCtrl",["$window","$scope","$http",function($window,$scope,$http){$scope.user={email:"",password:""},$scope.duplicateKey=!1,$scope.errorMsg="",$scope.submitUserinfo=function(){$scope.user.email=$scope.user.email.toLowerCase(),$http.post("/api/auth/signin",$scope.user).then(function(res){$window.location.href="/dash.html?"+res.data},function(err){$scope.duplicateKey=!0,console.log(err.data),$scope.errorMsg=err.data.message})}}]),front.controller("SignupCtrl",["$window","$scope","$http",function($window,$scope,$http){$scope.user={email:"",password:"",phone:""},$scope.duplicateKeyError=!1,$scope.keyErrorMsg="",$scope.validateAndSubmit=function(){for(var validated=!1,i=1;i<=3;i++){if($scope.user.validate(i)){validated=!1;break}validated=!0}validated&&$scope.submitUserinfo()},$scope.submitUserinfo=function(){$scope.user.email=$scope.user.email.toLowerCase(),$http.post("/api/auth/signup",$scope.user).then(function(res){$window.location.href="/dash.html?"+res.data},function(err){$scope.duplicateKeyError=!0,$scope.keyErrorMsg=err.data.errorMsg})},$scope.formValidated=!1,$scope.user.validate=function(index){if(1===index){var password=$scope.user.password;return""!==password&&password?password.length<6?($scope.errorMsg2="Password should be at least 6 characters",$scope.formValidated=!0,!0):password.length>16?($scope.formValidated=!0,$scope.errorMsg2="Password should not be more than 16 characters",!0):password.indexOf(" ")>0?($scope.formValidated=!0,$scope.errorMsg2="password should not contain any space",!0):($scope.formValidated=!1,$scope.errorMsg2="",!1):($scope.errorMsg2="Password should not be empty",$scope.formValidated=!0,!0)}if(2===index){var email=$scope.user.email,re=/\S+@\S+\.\S+/;return re.test(email)?""!==email&&email?($scope.formValidated=!1,$scope.errorMsg2="",!1):($scope.errorMsg2="email should not be empty",$scope.formValidated=!0,!0):($scope.errorMsg2="invalid email",$scope.formValidated=!0,!0)}if(3===index){var phone=$scope.user.phone;return phone.length>0&&phone.length<10?($scope.errorMsg2="Password should not be empty",$scope.formValidated=!0,!0):($scope.formValidated=!1,$scope.errorMsg1="",!1)}return!0}}]),dash.directive("poolHeader",["UserService","$window",function(UserService,$window){return{templateUrl:"views/layout/header.view.html",restrict:"A",link:function(scope,element,attr){scope.showNav=function(){var toggle=document.querySelectorAll("#nav-container")[0].style.display;"block"===toggle?document.querySelectorAll("#nav-container")[0].style.display="none":document.querySelectorAll("#nav-container")[0].style.display="block"},angular.element($window).bind("resize",function(){scope.width=$window.innerWidth,scope.width>=768?document.querySelectorAll("#nav-container")[0].style.display="block":document.querySelectorAll("#nav-container")[0].style.display="none",scope.$digest()}),UserService.getUserInfo().then(function(res){return res.data[0]?(scope.user=res.data[0],scope.user.name=scope.user.displayName,void UserService.saveUserId(scope.user._id)):void($window.location.href="/#/login")},function(err){$window.location.href="/#/login"}),scope.logout=function(){UserService.logoutUser().then(function(res){$window.location.href="/#/"})};(function(){UserService.saveUserInfo()})()}}}]),dash.directive("phoneInput",["$filter","$browser",function($filter,$browser){return{require:"ngModel",link:function($scope,$element,$attrs,ngModelCtrl){var listener=function(){var value=$element.val().replace(/[^0-9]/g,"");$element.val($filter("tel")(value,!1))};ngModelCtrl.$parsers.push(function(viewValue){return viewValue.replace(/[^0-9]/g,"").slice(0,10)}),ngModelCtrl.$render=function(){$element.val($filter("tel")(ngModelCtrl.$viewValue,!1))},$element.bind("change",listener),$element.bind("keydown",function(event){var key=event.keyCode;91===key||15<key&&key<19||37<=key&&key<=40||$browser.defer(listener)}),$element.bind("paste cut",function(){$browser.defer(listener)})}}}]),dash.filter("tel",function(){return function(tel){if(!tel)return"";var value=tel.toString().trim().replace(/^\+/,"");if(value.match(/[^0-9]/))return tel;var city,number;switch(value.length){case 1:case 2:case 3:city=value;break;default:city=value.slice(0,3),number=value.slice(3)}return number?(number=number.length>3?number.slice(0,3)+"-"+number.slice(3,7):number,("("+city+") "+number).trim()):"("+city}}),dash.directive("poolSidebar",["$location","$routeParams",function($location,$routeParams){var controller=["$scope",function($scope){$scope.driverMode=!0,$scope.switchMode=function(){$scope.driverMode=!$scope.driverMode},$scope.activate=function(s){for(var i in $scope.classList)$scope.classList[i]="";$scope.classList[s]=$scope.activeClass};(function(){$scope.activeClass="open active",$scope.nonActiveClass="",$scope.classList=["","","",""];var routeList=["/history","/requestRide","/postRide","/","/requestList"];$scope.classList[routeList.indexOf($location.path())]=$scope.activeClass})()}];return{templateUrl:"views/layout/sidebar.view.html",restrict:"A",controller:controller,link:function(scope,element,attr){}}}]),front.directive("phoneInput",["$filter","$browser",function($filter,$browser){return{require:"ngModel",link:function($scope,$element,$attrs,ngModelCtrl){var listener=function(){var value=$element.val().replace(/[^0-9]/g,"");$element.val($filter("tel")(value,!1))};ngModelCtrl.$parsers.push(function(viewValue){return viewValue.replace(/[^0-9]/g,"").slice(0,10)}),ngModelCtrl.$render=function(){$element.val($filter("tel")(ngModelCtrl.$viewValue,!1))},$element.bind("change",listener),$element.bind("keydown",function(event){var key=event.keyCode;91===key||15<key&&key<19||37<=key&&key<=40||$browser.defer(listener)}),$element.bind("paste cut",function(){$browser.defer(listener)})}}}]),front.filter("tel",function(){return function(tel){if(!tel)return"";var value=tel.toString().trim().replace(/^\+/,"");if(value.match(/[^0-9]/))return tel;var city,number;switch(value.length){case 1:case 2:case 3:city=value;break;default:city=value.slice(0,3),number=value.slice(3)}return number?(number=number.length>3?number.slice(0,3)+"-"+number.slice(3,7):number,("("+city+") "+number).trim()):"("+city}}),dash.filter("capitalize",function(){return function(input){return input?input.charAt(0).toUpperCase()+input.substr(1).toLowerCase():""}}),dash.filter("startFrom",function(){return function(input,start){return start=+start,input.slice(start)}}),dash.config(["$routeProvider","$locationProvider",function($routeProvider,$locationProvider){$locationProvider.hashPrefix(""),$locationProvider.html5Mode(!1),$routeProvider.when("/",{templateUrl:"views/rideList.view.html",controller:"rideListCtrl",css:"/styles/ride-list.css"}).when("/requestRide",{templateUrl:"views/request_ride.view.html",controller:"requestRideCtrl"}).when("/postRide",{templateUrl:"views/post_ride.view.html",controller:"postRideCtrl"}).when("/404",{templateUrl:"views/error/404.view.html"}).when("/rides",{templateUrl:"views/ride-list.view.html",controller:"rideListCtrl"}).when("/profile",{templateUrl:"views/profile.view.html",controller:"profileCtrl",css:"/styles/profile.css"}).when("/history",{templateUrl:"views/history.view.html",controller:"historyCtrl"}).when("/requestList",{templateUrl:"views/requestList.view.html",controller:"requestListCtrl"}).otherwise({redirectTo:"/404"})}]),front.config(["$routeProvider","$locationProvider",function($routeProvider,$locationProvider){$locationProvider.hashPrefix(""),$locationProvider.html5Mode(!1),$routeProvider.when("/",{templateUrl:"views/home.view.html",css:"styles/landing.css"}).when("/login",{templateUrl:"views/login.view.html",controller:"SigninCtrl",css:"styles/login.css"}).when("/signup",{templateUrl:"views/signup.view.html",controller:"SignupCtrl",css:"styles/signup.css"}).when("/forgot-password",{templateUrl:"views/password/forgot-password.view.html",controller:"ForgotCtrl"}).when("/password/reset/:id",{templateUrl:"views/password/reset-password.view.html",controller:"ResetCtrl"}).when("/password/resetinvalid",{templateUrl:"views/password/reset-password-invalid.view.html"}).when("/404",{templateUrl:"views/error/404.view.html"}).when("/terms-and-condition",{templateUrl:"views/terms/term.view.html"}).when("/privacy-policy",{templateUrl:"views/terms/privacy.view.html"}).otherwise({redirectTo:"/404"})}]),dash.factory("CityList",["$http",function($http){var cityList=function(){var a={commonCities:["Toronto Downtown","Toronto Richmond Hill","Toronto Scarborough","Toronto North York","Toronto Markham","Toronto Missisauga","London","Waterloo","Kitchener","Niagara","Ottawa","Hamilton","Windsor","Guelph"],otherCities:[]};return a.commonCities.sort(),a.commonCities.unshift("Select a city"),a};return cityList()}]),dash.factory("UserService",["$location","$http",function($location,$http){var userService={userId:"",session:"",userInfo:{}};return userService.getSession=function(){var url=$location.absUrl();return userService.session=url.substring(url.indexOf("?")+1,url.indexOf("#")),userService.session},userService.getUserInfo=function(){return""===userService.session&&userService.getSession(),$http.post("api/data/userinfo",{session:userService.session})},userService.logoutUser=function(){return $http.post("api/auth/signout",{session:userService.session})},userService.saveUserId=function(userId){userService.userId=userId},userService.getUserId=function(){return userService.userId},userService.getRideHistory=function(){return $http.get("api/history/"+userService.userInfo._id)},userService.saveUserInfo=function(){return $http.post("api/data/userinfo",{session:userService.session}).then(function(res){userService.userInfo=res.data[0]})},userService}]);